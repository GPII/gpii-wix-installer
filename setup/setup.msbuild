<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="3.5"
         DefaultTargets="Clean;GPII;USBListener;RFIDListener;UCRT;WIX;Signing"
         xmlns="http://schemas.microsoft.com/developer/msbuild/2003"
         >

  <Import Project="C:\Program Files (x86)\MSBuild\ExtensionPack\4.0\MSBuild.ExtensionPack.tasks"/>

  <PropertyGroup>
    <SourceDir>..\staging</SourceDir>
    <TempDir>..\temp</TempDir>
    <OutDir>..\output</OutDir>
    <Version>$([System.DateTime]::Now.ToString(`yyMMdd.HHmmss`))</Version>
    <MsiFile>GPII.$(Version).msi</MsiFile>
  </PropertyGroup>

  <!-- The list of WIX input files -->
  <ItemGroup>
    <WixCode Include="Product.wxs" />
    <WixCode Include="UI.wxs" />
  </ItemGroup>

  <!-- The list of WIX after candle files -->
  <ItemGroup>
    <WixObject Include="$(TempDir)\Product.wixobj" />
    <WixObject Include="$(TempDir)\GPII.wixobj" />
    <WixObject Include="$(TempDir)\USBListener.wixobj" />
    <WixObject Include="$(TempDir)\RFIDListener.wixobj" />
    <WixObject Include="$(TempDir)\UCRT.wixobj" />
    <WixObject Include="$(TempDir)\UI.wixobj" />
  </ItemGroup>

  <ItemGroup>
    <FilesToDelete Include="$(OutDir)\GPII*.*" />
  </ItemGroup>

  <Target Name="Clean">
    <MSBuild.ExtensionPack.FileSystem.Folder TaskAction="RemoveContent" Path="$(TempDir)"/>
    <Delete Files="@(FilesToDelete)" />
  </Target>

  <Target Name="GPII">
    <MSBuild.ExtensionPack.FileSystem.RoboCopy Source="$(SourceDir)"
                                               Destination="$(TempDir)\GPII"
                                               Files=""
                                               Options="/S /E"
                                               />
    <RemoveDir Directories="$(TempDir)\GPII\windows\listeners" />
    <Exec Command='$(WixPath)heat dir "$(TempDir)\GPII" -dr INSTALLFOLDER -ke -srd -cg GPII -var var.publishDir -gg -out "$(TempDir)\GPII.wxs"'
          ContinueOnError="false"
          WorkingDirectory="."
          />
    <Exec Command='"$(WixPath)candle" -dpublishDir=$(TempDir)\GPII -dversion=$(Version) -o $(TempDir)\ $(TempDir)\GPII.wxs'
          ContinueOnError="false"
          WorkingDirectory="."
          />

  </Target>

  <Target Name="USBListener">
    <MSBuild.ExtensionPack.FileSystem.RoboCopy Source="$(SourceDir)\windows\listeners\bin\Release"
                                               Destination="$(TempDir)\USBListener"
                                               Files="GPII_USBListener.exe"
                                               />
    <Exec Command='$(WixPath)heat dir "$(TempDir)\USBListener" -dr LISTENERFOLDER -ke -srd -cg USBListener -var var.publishDir -gg -out "$(TempDir)\USBListener.wxs"'
          ContinueOnError="false"
          WorkingDirectory="."
          />
    <Exec Command='"$(WixPath)candle" -dpublishDir=$(TempDir)\USBListener -dversion=$(Version) -o $(TempDir)\ $(TempDir)\USBListener.wxs'
          ContinueOnError="false"
          WorkingDirectory="."
          />
  </Target>

  <Target Name="RFIDListener">
    <MSBuild.ExtensionPack.FileSystem.RoboCopy Source="$(SourceDir)\windows\listeners\bin\Release"
                                               Destination="$(TempDir)\RFIDListener"
                                               Files="GPII_RFIDListener.exe"
                                               />
    <Exec Command='$(WixPath)heat dir "$(TempDir)\RFIDListener" -dr LISTENERFOLDER -ke -srd -cg RFIDListener -var var.publishDir -gg -out "$(TempDir)\RFIDListener.wxs"'
          ContinueOnError="false"
          WorkingDirectory="."
          />
    <Exec Command='"$(WixPath)candle" -dpublishDir=$(TempDir)\RFIDListener -dversion=$(Version) -o $(TempDir)\ $(TempDir)\RFIDListener.wxs'
          ContinueOnError="false"
          WorkingDirectory="."
          />
  </Target>

  <Target Name="UCRT">
    <MSBuild.ExtensionPack.FileSystem.RoboCopy Source="Redist\ucrt"
                                               Destination="$(TempDir)\UCRT"
                                               Files=""
                                               />
    <Exec Command='$(WixPath)heat dir "$(TempDir)\UCRT" -dr LISTENERFOLDER -ke -srd -cg UCRT -var var.publishDir -gg -out "$(TempDir)\UCRT.wxs"'
          ContinueOnError="false"
          WorkingDirectory="."
          />
    <Exec Command='"$(WixPath)candle" -dpublishDir=$(TempDir)\UCRT -dversion=$(Version) -o $(TempDir)\ $(TempDir)\UCRT.wxs'
          ContinueOnError="false"
          WorkingDirectory="."
          />
  </Target>

  <Target Name="WIX">
    <Message Text="@(WixCode)"/>
    <Exec Command='"$(WixPath)candle" -dpublishDir=$(TempDir) -dversion=$(Version) -o $(TempDir)\ @(WixCode, &apos; &apos;)'
          ContinueOnError="false"
          WorkingDirectory="."
          />
    <Exec Command='"$(WixPath)light" -ext WixUIExtension -out $(OutDir)\$(MsiFile) @(WixObject, &apos; &apos;)'
          ContinueOnError="false"
          WorkingDirectory="."
          />
    <ItemGroup>
      <DeletePdb Include="$(OutDir)\*.wixpdb" />
    </ItemGroup>
    <Delete Files="@(DeletePdb)" />
    <Message Text="Install package has been created." />
  </Target>

    <Target Name="Signing">
        <MSBuild.ExtensionPack.Computer.EnvironmentVariable TaskAction="Get" Variable="GPII_SIGNING_CERT">
            <Output PropertyName="SigningCert" TaskParameter="Value"/>
        </MSBuild.ExtensionPack.Computer.EnvironmentVariable>
        <MSBuild.ExtensionPack.Computer.EnvironmentVariable TaskAction="Get" Variable="GPII_SIGNING_CERT_PASSWORD">
            <Output PropertyName="SigningCertPassword" TaskParameter="Value"/>
        </MSBuild.ExtensionPack.Computer.EnvironmentVariable>
        <MSBuild.ExtensionPack.Computer.EnvironmentVariable TaskAction="Get" Variable="GPII_SIGNING_DESCRIPTION">
            <Output PropertyName="SigningDescription" TaskParameter="Value"/>
        </MSBuild.ExtensionPack.Computer.EnvironmentVariable>
        <Exec Command='signtool sign /f $(SigningCert) /p $(SigningCertPassword) /d $(SigningDescription) /t http://timestamp.verisign.com/scripts/timstamp.dll /v $(OutDir)\$(MsiFile)' 
              Condition="Exists($(SigningCert))"
              ContinueOnError="false"
              WorkingDirectory="."
              />
    </Target>
</Project>